openapi: 3.0.3
info:
  title: Sample REST APIs using Flask, OpenAPI and Connexion
  description: Sample REST APIs using Flask, OpenAPI and Connexion
  version: "1.0.0"
servers:
  - url: http://localhost:5000
    description: Rest Server showing Swagger and Connexion capability
paths:
  /item:
    get:
      operationId: item.getAll
      tags:
        - Item
      summary: Returns a list of items.
      description: Returns a list of items.
      responses:
        "200": # status code
          description: Return the entire list of items.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
    post:
      operationId: item.create
      tags:
        - Item
      summary: Create a new Item
      description: Create a new Item
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Item"
      responses:
        "201":
          description: Item Created successfully
  /item/{id}:
    get:
      operationId: item.get
      tags:
        - Item
      summary: Return an Item with given ID
      description: Return an Item with given ID
      parameters:
        - name: id
          in: path
          description: Item ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200": # status code
          description: Return an Item with given ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
    delete:
      operationId: item.delete
      tags:
        - Item
      summary: Delete an Item with given ID
      description: Delete an Item with given ID
      parameters:
        - name: id
          in: path
          description: Item ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200": # status code
          description: Deleted an Item with given ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
    put:
      operationId: item.update
      tags:
        - Item
      summary: Update an Item with given ID
      description: Update an Item with given ID
      parameters:
        - name: id
          in: path
          description: Item ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Item"
      responses:
        "200": # status code
          description: Updated an Item with given ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"

components:
  schemas:
    Item:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: number
